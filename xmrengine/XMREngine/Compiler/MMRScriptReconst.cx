/***************************************************\
 *  COPYRIGHT 2010, Mike Rieker, Beverly, MA, USA  *
 *  All rights reserved.                           *
\***************************************************/

using OpenSim.Region.ScriptEngine.XMREngine;
using System;
using System.IO;
using System.Text;

/**
 * @brief translate a reduced script token into corresponding source code.
 * The single script token contains a tokenized and textured version of the whole script file.
 */

namespace OpenSim.Region.ScriptEngine.XMREngine
{
	public delegate void SrcWriter (string s);

	public class ScriptReconst
	{
		public static void Reconst (TokenScript tokenScript, StreamWriter srcFileWriter)
		{
			new ScriptReconst (tokenScript, srcFileWriter);
		}

		private StreamWriter srcFileWriter = null;

		private ScriptReconst (TokenScript tokenScript, StreamWriter srcFileWriter)
		{
			this.srcFileWriter = srcFileWriter;
			tokenScript.Reconst (WriteSrc);
		}

		/**
		 * @brief Write string to source file, indenting as needed.
		 */
		private const int INDENTBY = 4;
		private bool atBegOfLine = true;
		private int indent = 0;
		private void WriteSrc (string s)
		{
			StringBuilder srcsb = new StringBuilder ();
			for (int i = 0; i < s.Length; i ++) {
				char c = s[i];
				if (c == '}') {
					indent -= INDENTBY;
					if (!atBegOfLine) {
						srcsb.Append ('\n');
						atBegOfLine = true;
					}
				}
				if (atBegOfLine) {
					if (c == ' ') continue;
					if ((c == '@') || ((s.Length > i + 4) && (s.Substring(i, 4) == "case")) || ((s.Length > i + 7) && (s.Substring(i, 8) == "default:"))) {
						srcsb.Append ("".PadRight (indent - INDENTBY));
					} else {
						srcsb.Append ("".PadRight (indent));
					}
					atBegOfLine = false;
				}
				srcsb.Append (c);
				if (c == '\n') atBegOfLine = true;
				if ((c == ';') || (c == '}') || (c == ':')) {
					srcsb.Append ('\n');
					atBegOfLine = true;
				}
				if (c == '{') {
					srcsb.Append ('\n');
					atBegOfLine = true;
					indent += INDENTBY;
				}
			}
			srcFileWriter.Write (srcsb.ToString ());
		}
	}
}
